generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid()) @db.Uuid
  username   String    @unique
  email      String    @unique
  created_at DateTime  @default(now())
  videos     Video[]
  likes      Like[]
  comments   Comment[]
  followers Follower[]
  chats Chat[]
  

  
}

model Video {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String
  description String?
  uri         String // URL of the uploaded video
  created_at  DateTime @default(now())
  user        User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id     String   @db.Uuid

  // relationships
  comments Comment[]
  likes    Like[]
}

// Comments on videos
model Comment {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  content    String
  created_at DateTime @default(now())
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String   @db.Uuid
  video      Video    @relation(fields: [video_id], references: [id], onDelete: Cascade)
  video_id   String   @db.Uuid
}

// Likes on videos
model Like {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at    DateTime @default(now())
  user          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id       String   @db.Uuid
  video         Video    @relation(fields: [video_id], references: [id], onDelete: Cascade)
  video_id      String   @db.Uuid
  video_user_id String?   
}

model Follower {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  follower_user_id String    @db.Uuid
  user_id          String    @db.Uuid
  created_at       DateTime @default(now())

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([follower_user_id, user_id])    
}

model Chat {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id String @db.Uuid
  user User @relation(fields:[user_id], references: [id], onDelete: Cascade)
  chat_user_id String @db.Uuid
  text     String
  created_at  DateTime @default(now())
  users_key String
}

